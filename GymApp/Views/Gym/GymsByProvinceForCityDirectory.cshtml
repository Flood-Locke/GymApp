@using GymApp.ViewModels
@model GymsByProvince

<section class="container">
    <h1>Select your Province</h1>
    <div class="row">
        <form role="search" class="card card-sm" id="form">
            <div class="card-body row no-gutters align-items-center">
                <div class="col-auto">
                    <i class="icon-magnifying-glass h4 text-body"></i>
                </div>
                <!--end of col-->
                <div class="col">
                    <input class="form-control form-control-sm form-control-borderless" type="search" placeholder="Search province" id="myInput">
                    <button>Search</button>  
                </div>
            </div>
        </form>
        <!--end of col-->
    </div>
    <div class="row">
        <ul class="list-unstyled">
            @foreach (var val in Model.Province)
            {
                <li class="li-item">
                    <a class="province-link" asp-controller="Gym" asp-action="GymsByCityDirectory" asp-route-province="@val.ProvinceName">@val.ProvinceName</a>
                </li>
            }
        </ul>
    </div>
    <script type="text/javascript">

    const elements = [document.getElementsByClassName("li-item")]
        .map(elem => ({elem, text: elem.querySelector("a").innerText.toUpperCase()}));
    const input = document.getElementById('myInput');
    const f = document.getElementById('form');

    function filterProvince(event) {
        const term = input.value.toUpperCase();
        for (const {elem, text} of elements) {
            elem.style.display = text.includes(term) ? "" : "none";
        }
        f.addEventListener('submit', filerProvince)
        
    }
</script>
</section>


